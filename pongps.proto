syntax = "proto3";
import "google/protobuf/empty.proto"; 
package main;

// identify the clients
message clientId {
  // tells the client who they are
  int32 whoami = 1;
}

// sending server the updated paddle pos
message updatePaddlePos {
  int32 id = 1;
  int32 pos = 2;
}
message clientStatus{
  int32 isConnected = 1;
}
// reply to previous
message currGameState {
  int32 pos1 = 1; // first player position
  int32 pos2 = 2; // second player position
  int32 ballx = 3; //ball pos x
  int32 bally = 4; //ball pos y
  int32 ballVx = 5; // ball's x velocity
  int32 ballVy = 6; // ball's y velocity
}

message StreamBallPositionRequest {
  int32 client_id = 1;
}

// message from the server 
message scored{
  // players scores
  int32 p1Score = 1;
  int32 p2Score = 2;
}

message ballPosition{
  int32 ball_x = 1;
  int32 ball_y = 2;

}

// reply to scored
message replyScored{
  // ack should be "ok"
  string ack = 1;
  // reply with the reset position ie back to default
  updatePaddlePos reset = 2;
}


service GameService {
  // connect function
  rpc connectClient(google.protobuf.Empty) returns (clientId);
  // client sends to server
  rpc updateClientPos(updatePaddlePos) returns (currGameState);
  // server sends to client that one has scored
  rpc clientScored(scored) returns (replyScored);
  // server send to client unsoliceted ball position (if the clients didnt move but the ball did)
  rpc ballmoved(ballPosition) returns (stream ballPosition); 
  rpc StreamBallPosition (StreamBallPositionRequest) returns (stream ballPosition) {}
  rpc otherClientConnected(clientId) returns (clientStatus);

} 

